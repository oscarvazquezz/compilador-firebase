
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASIGNARLLAIZQLLADERleftDOBLEPUNTOCOMAASIGNAR COMA COMILLA DECIMAL DOBLEPUNTO ENTERO LLADER LLAIZQ TEXT\n    expresion : COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER\n              | COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion COMA expresion LLADER\n              | COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion COMA expresion COMA expresion LLADER\n    \n    expresion : COMILLA TEXT COMILLA DOBLEPUNTO COMILLA TEXT COMILLA COMA expresion\n              | COMILLA TEXT COMILLA DOBLEPUNTO COMILLA TEXT COMILLA\n              | COMILLA TEXT COMILLA DOBLEPUNTO ENTERO \n              | COMILLA TEXT COMILLA DOBLEPUNTO ENTERO COMA expresion\n              | COMILLA TEXT COMILLA DOBLEPUNTO DECIMAL\n              | COMILLA TEXT COMILLA DOBLEPUNTO DECIMAL COMA expresion\n\n              | expresion COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER\n              | expresion COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER COMA expresion\n            \n    expresion : ENTERO'
    
_lr_action_items = {'COMILLA':([0,1,3,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[2,4,-12,7,8,11,2,-6,-8,2,21,4,2,2,4,-5,-1,2,-7,-9,-10,2,4,2,-4,2,-2,-11,4,-3,]),'ENTERO':([0,9,12,15,18,19,23,27,29,31,],[3,13,3,3,3,3,3,3,3,3,]),'$end':([1,3,13,14,21,22,24,25,26,30,32,33,35,],[0,-12,-6,-8,-5,-1,-7,-9,-10,-4,-2,-11,-3,]),'TEXT':([2,4,11,],[5,6,16,]),'LLADER':([3,13,14,17,20,21,22,24,25,26,28,30,32,33,34,35,],[-12,-6,-8,22,26,-5,-1,-7,-9,-10,32,-4,-2,-11,35,-3,]),'COMA':([3,13,14,17,21,22,24,25,26,28,30,32,33,35,],[-12,18,19,23,27,-1,-7,-9,29,31,-4,-2,-11,-3,]),'DOBLEPUNTO':([7,8,],[9,10,]),'LLAIZQ':([9,10,],[12,15,]),'DECIMAL':([9,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,12,15,18,19,23,27,29,31,],[1,17,20,24,25,28,30,33,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER','expresion',7,'p_expresion_logicas','Sintatico_Semantico.py',16),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion COMA expresion LLADER','expresion',9,'p_expresion_logicas','Sintatico_Semantico.py',17),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion COMA expresion COMA expresion LLADER','expresion',11,'p_expresion_logicas','Sintatico_Semantico.py',18),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO COMILLA TEXT COMILLA COMA expresion','expresion',9,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',25),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO COMILLA TEXT COMILLA','expresion',7,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',26),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO ENTERO','expresion',5,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',27),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO ENTERO COMA expresion','expresion',7,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',28),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO DECIMAL','expresion',5,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',29),
  ('expresion -> COMILLA TEXT COMILLA DOBLEPUNTO DECIMAL COMA expresion','expresion',7,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',30),
  ('expresion -> expresion COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER','expresion',8,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',32),
  ('expresion -> expresion COMILLA TEXT COMILLA DOBLEPUNTO LLAIZQ expresion LLADER COMA expresion','expresion',10,'p_expresion_logicas_evaluar','Sintatico_Semantico.py',33),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','Sintatico_Semantico.py',41),
]
